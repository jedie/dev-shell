[tool.poetry]
name = "dev-shell"
version = "0.6.0.rc1"
description = "Devloper shell for easy startup..."
readme = "README.md"
authors = ["Jens Diemer <python@jensdiemer.de>"]
homepage = "https://github.com/jedie/dev-shell"
license = "GNU General Public License v3.0"
packages = [
    { include = "dev_shell" },
]

[tool.poetry.scripts]
devshell = 'dev_shell.dev_shell_app:devshell_cmdloop'

[tool.poetry.dependencies]
python = ">=3.7,<4.0.0"
cmd2 = "*"  # https://github.com/python-cmd2/cmd2

# fix completion for Mac OS:
gnureadline = { version = "*", markers = "sys_platform == 'darwin'" }


[tool.poetry.dev-dependencies]
cmd2_ext_test = "*"
poetry-publish = "*"  # https://github.com/jedie/poetry-publish
pytest = "*"
pytest-randomly = "*"
pytest-cov = "*"
pytest-darker = "*"  # https://github.com/akaihola/pytest-darker
pytest-flake8 = "*"
pytest-isort = "*"
# TODO: pytest-mypy = "*"
tox = "*"
pyupgrade = "*"  # https://github.com/asottile/pyupgrade

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.darker]
src = ['.',]
revision = "origin/main..."
line_length = 100
verbose = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
known_first_party=["dev_shell"]
profile='black'
line_length=100
skip_glob=["*/htmlcov/*"]
lines_after_imports=2


[tool.coverage.run]
omit = [".*"]


[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
norecursedirs = ".* .git __pycache__ conf coverage* dist htmlcov"
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
addopts = """
    --import-mode=importlib
    --cov=.
    --cov-report term-missing
    --cov-report html
    --cov-report xml
    --no-cov-on-fail
    --showlocals
    --darker
    --flake8
    --isort
    --doctest-modules
    --failed-first
    --last-failed-no-failures all
    --new-first
"""
# TODO: --mypy


[tool.tox]
# https://tox.wiki/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{37,38,39,310}
skip_missing_interpreters = True

[testenv]
passenv = *
commands =
    python --version
    python devshell.py pytest
"""
