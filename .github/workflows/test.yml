# https://github.com/actions/setup-python

name: Test

on:
  schedule:
    - cron: '0 8 * * *'
  push:

jobs:
  test:
    name: 'Python ${{ matrix.python-version }} on ${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    env:
      PYTHONUNBUFFERED: 1
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: [3.9, 3.8, 3.7]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: 'Set up Python ${{ matrix.python-version }}'
      uses: actions/setup-python@v2
      with:
        python-version: '${{ matrix.python-version }}'

    - name: 'Set up .venv cache'
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/dev-shell.py') }}

    - name: 'Ensure cache is healthy by list installed packages'
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: timeout 10s ./dev-shell.py list_venv_packages || rm -rf .venv

    - name: 'Bootstrap'
      run: |
        python3 dev-shell.py quit

    - name: 'Run tests with Python v${{ matrix.python-version }}'
      run: |
        python3 dev-shell.py pytest

    - name: 'Upload coverage report'
      if: matrix.os == 'ubuntu-latest'
      run: bash <(curl -s https://codecov.io/bash)

    - name: 'Run linters'
      if: matrix.python-version == '3.8'
      run: |
        python3 dev-shell.py linting
